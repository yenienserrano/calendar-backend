{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","actions/auth.js","hooks/useForm.js","actions/ui.js","components/auth/LoginScreen.js","components/calendar/CalendarEvent.js","helpers/prepareEvents.js","actions/events.js","components/calendar/CalenderModal.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/ui/AddNewFab.js","components/ui/DeletedFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/RouterApp.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","isOpen","msgError","reducers","combineReducers","ui","state","action","type","payload","calendar","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseURL","process","fetchSinToken","endPoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","checkingFinish","login","user","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","uiOpenModal","setError","err","LoginScreen","dispatch","useDispatch","useSelector","validEmail","setValidEmail","validPassword","setValidPassword","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","isFormValid","validator","isEmail","length","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","CalendarEvent","event","title","prepareEvents","end","moment","toDate","start","eventAddNew","eventClearActive","eventDeleted","eventUpdated","eventLoaded","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","endEvent","clone","eventInit","notes","CalenderModal","setStartDate","setEndDate","validTitle","setValidTitle","formValue","setFormValue","useEffect","closeModal","onRequestClose","style","overlayClassName","closeTimeoutMS","momentStart","isSameOrBefore","getState","evento","_id","console","log","eventStartAddNew","minDate","autoComplete","rows","Navbar","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","AddNewFab","DeletedFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","view","onSelectSlot","selectable","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","RouterApp","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b1635c1.chunk.js","sourcesContent":["\r\n\r\nexport const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n    uiSetError: '[ui] Set Error',\r\n    uiRemoveError: '[ui] Remove Error',\r\n\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventSetActive: '[event] Set active',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Event loaded',\r\n    eventLogout: '[event] Event logout',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n}","import { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    checking: true\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n\r\n    case types.authLogin:\r\n\r\n        return {\r\n            ...state,\r\n            ...action.payload,\r\n            checking: false\r\n        }\r\n    \r\n    case types.authCheckingFinish:\r\n\r\n        return {\r\n            ...state,\r\n            checking: false\r\n        }\r\n\r\n    case types.authLogout:\r\n        return {\r\n            checking: false\r\n        }\r\n\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add( 2, 'hours' ).toDate(),\r\n//     bgColor: '#fafafa',\r\n//     color: 'white',\r\n//     user:{\r\n//         _id: '123',\r\n//         name: 'ian'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => ( e.id === action.payload.id ) ? action.payload : e \r\n                )\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => ( e.id !== state.activeEvent.id ) \r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return initialState\r\n\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    isOpen: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch ( action.type ) {\r\n\r\n    case types.uiOpenModal:\r\n        return {\r\n            ...state,\r\n            isOpen: true\r\n        }\r\n\r\n    case types.uiCloseModal:\r\n        return {\r\n            ...state,\r\n            isOpen: false\r\n        }\r\n    case types.uiSetError:\r\n        return {\r\n            ...state,\r\n            msgError: action.payload\r\n        }\r\n    case types.uiRemoveError:\r\n        return {\r\n            ...state,\r\n            msgError: null\r\n        }\r\n\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import { combineReducers } from 'redux'\r\n\r\nimport { authReducer } from './authReducer'\r\nimport { calendarReducer } from './calendarReducer'\r\nimport { uiReducer } from './uiReducer'\r\n\r\n\r\nexport const reducers = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { reducers } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore( \r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n)","\r\nconst baseURL = process.env.REACT_APP_API_URL\r\n\r\n\r\nconst fetchSinToken = ( endPoint, data, method = \"GET\" ) => {\r\n\r\n    const url = `${baseURL}/${endPoint}`\r\n\r\n    if( method === \"GET\" ){\r\n        return fetch( url )\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n}\r\n    \r\nconst fetchConToken = ( endPoint, data, method = \"GET\" ) => {\r\n\r\n    const url = `${baseURL}/${endPoint}`\r\n    const token = localStorage.getItem('token')\r\n\r\n    if( method === \"GET\" ){\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        })\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import Swal from \"sweetalert2\"\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\"\r\n\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return  async( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' )\r\n        const body = await resp.json()\r\n\r\n        if( body.ok ){\r\n            localStorage.setItem( 'token', body.token )\r\n            localStorage.setItem( 'token-init-time', new Date().getTime() )\r\n\r\n            dispatch( login({ \r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire( 'Error', body.msg, 'error')\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport const startRegister = ( name, email, password ) => {\r\n    return async( dispatch ) => {\r\n        const resp = await fetchSinToken( 'auth/new', { name, email, password }, 'POST' )\r\n        const body = await resp.json()\r\n\r\n\r\n        if( body.ok ){\r\n            localStorage.setItem( 'token', body.token )\r\n            localStorage.setItem( 'token-init-time', new Date().getTime() )\r\n\r\n            dispatch( login({ \r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire( 'Error', body.msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async( dispatch ) => {\r\n        const resp = await fetchConToken( 'auth/renew' )\r\n        const body = await resp.json()\r\n\r\n\r\n        if( body.ok ){\r\n            localStorage.setItem( 'token', body.token )\r\n            localStorage.setItem( 'token-init-time', new Date().getTime() )\r\n\r\n            dispatch( login({ \r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            dispatch( checkingFinish() )\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish })\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n\r\n        localStorage.clear()\r\n        \r\n        dispatch( logout() )\r\n\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout })","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal })\r\n\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal })\r\n\r\nexport const setError = ( err ) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n})\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n})","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startLogin, startRegister } from '../../actions/auth'\r\n\r\nimport './login.css';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport validator from 'validator';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector( state => state.ui );\r\n\r\n    const [ validEmail, setValidEmail ] = useState( false )\r\n    const [ validPassword, setValidPassword ] = useState( false )\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: 'yenienserrano@gmail.com',\r\n        lPassword: '123456'\r\n    })\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'ian',\r\n        rEmail: 'yenienserrano12@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    })\r\n\r\n    const { lEmail, lPassword } = formLoginValues\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues\r\n\r\n    const handleLogin = ( e ) => {\r\n        e.preventDefault()\r\n        \r\n        if( isFormValid() ) {\r\n            dispatch( startLogin( lEmail, lPassword ))\r\n        }\r\n    }\r\n\r\n    const handleRegister = ( e ) => {\r\n        e.preventDefault()\r\n\r\n        if( rPassword1 === rPassword2 ){\r\n            dispatch( startRegister( rName, rEmail, rPassword1 ) )\r\n        } else {\r\n            Swal.fire( 'error', 'Las contraseñas deben ser iguales', 'error')\r\n        }\r\n    } \r\n\r\n    const isFormValid = () => {\r\n        if( !validator.isEmail( lEmail ) ){\r\n            setValidEmail( true )\r\n            dispatch(\r\n                setError( 'Email is not valid' )\r\n            )\r\n            return false\r\n        } else if( lPassword.length <= 5 ){\r\n            setValidPassword( true )\r\n            dispatch(\r\n                setError( 'Password should be at least 6 caracters' )\r\n            )\r\n            return false\r\n        }\r\n        setValidEmail( false )\r\n        setValidPassword( false )\r\n\r\n        dispatch( removeError() )\r\n        return true\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    \r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className={`form-control ${ validEmail && 'is-invalid' }`}\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className={`form-control ${ validPassword && 'is-invalid' }`}\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                    {\r\n                        msgError && (\r\n                            <div className=\"alert alert-danger\">\r\n                                { msgError }\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={ rPassword1 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event\r\n\r\n    return (\r\n        <div>\r\n            <strong> { title } </strong>\r\n            <span>- { user.name }</span>\r\n        </div>\r\n    )\r\n}\r\n","import moment from \"moment\"\r\n\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n\r\n    return events.map(\r\n        e => ({\r\n            ...e,\r\n            end: moment( e.end ).toDate(),\r\n            start: moment( e.start ).toDate()\r\n        })\r\n    )\r\n}","import Swal from \"sweetalert2\"\r\nimport { fetchConToken } from \"../helpers/fetch\"\r\nimport { prepareEvents } from \"../helpers/prepareEvents\"\r\nimport { types } from \"../types/types\"\r\n\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid, name } = getState().auth\r\n        try {\r\n            \r\n            const resp = await fetchConToken( 'events', event, 'POST' )\r\n            const body = await resp.json()\r\n    \r\n            if( body.ok ){\r\n                event.id = body.evento.id\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name,\r\n                }\r\n                console.log(event)\r\n    \r\n                dispatch( eventAddNew( event ) )\r\n    \r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventAddNew = ( event ) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n})\r\n\r\nexport const eventSetActive = ( event ) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventClearActive = (  ) => ({\r\n    type: types.eventClearActiveEvent,\r\n})\r\n\r\nexport const startEventDeleted = () => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { id } = getState().calendar.activeEvent\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken( `events/${ id }`, {}, 'DELETE' )\r\n            const body = await resp.json()\r\n\r\n            if( body.ok ){\r\n\r\n                dispatch( eventDeleted() )\r\n\r\n            } else {\r\n\r\n                Swal.fire( 'Error', body.msg, 'error')\r\n\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nconst eventDeleted = (  ) => ({\r\n    type: types.eventDeleted,\r\n})\r\n\r\nexport const startEventUpdated = ( event ) => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchConToken( `events/${ event.id }`, event, 'PUT' )\r\n        const body = await resp.json()\r\n\r\n        if( body.ok ){\r\n\r\n            dispatch( eventUpdated( event ) )\r\n\r\n        } else {\r\n\r\n            Swal.fire( 'Error', body.msg, 'error')\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n})\r\n\r\nexport const eventStartLoaded = () => {\r\n    return async ( dispatch ) => {\r\n\r\n        const resp = await fetchConToken( 'events' )\r\n        const body = await resp.json()\r\n\r\n\r\n\r\n        const events = prepareEvents( body.eventos )\r\n\r\n        dispatch( eventLoaded( events ) )\r\n\r\n    }\r\n}\r\n\r\nconst eventLoaded = ( events ) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const startEventLogout = () => ({\r\n    type: types.eventLogout\r\n})","import React, { useEffect, useState } from 'react'\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { eventClearActive, eventStartAddNew, startEventUpdated } from '../../actions/events';\r\n\r\n \r\nconst customStyles = {\r\n  content : {\r\n    top                   : '50%',\r\n    left                  : '50%',\r\n    right                 : 'auto',\r\n    bottom                : 'auto',\r\n    marginRight           : '-50%',\r\n    transform             : 'translate(-50%, -50%)'\r\n  }\r\n};\r\nModal.setAppElement('#root')\r\n\r\nconst now = moment().minutes( 0 ).seconds( 0 ).add( 1, 'hours' )\r\nconst endEvent = now.clone().add( 1, 'hours' )\r\n\r\nconst eventInit = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: endEvent.toDate()  \r\n}\r\n\r\nexport const CalenderModal = () => {\r\n\r\n    const { isOpen } = useSelector( state => state.ui );\r\n    const { activeEvent } = useSelector( state => state.calendar );\r\n    const dispatch = useDispatch();\r\n\r\n    const [ startDate, setStartDate ] = useState( now.toDate() )\r\n    const [ endDate, setEndDate ] = useState( endEvent.toDate() )\r\n    const [ validTitle, setValidTitle ] = useState( true )\r\n    const [ formValue, setFormValue ] = useState( eventInit )\r\n\r\n    const { title, notes, start, end } = formValue\r\n\r\n    useEffect(() => {\r\n        if( activeEvent ){\r\n            setFormValue( activeEvent ) \r\n        } else {\r\n            setFormValue( eventInit )\r\n        }\r\n\r\n    }, [ activeEvent, setFormValue ])\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValue({\r\n            ...formValue,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setStartDate( e )\r\n        setFormValue({\r\n            ...formValue,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setEndDate( e )\r\n        setFormValue({\r\n            ...formValue,\r\n            end: e\r\n        })\r\n    }\r\n    \r\n\r\n    const closeModal = () => {\r\n        dispatch( eventClearActive() )\r\n        dispatch( uiCloseModal() )\r\n        setFormValue( eventInit )\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault()\r\n        \r\n        const momentStart = moment( start )\r\n        const momentEnd = moment( end )\r\n\r\n        if( momentEnd.isSameOrBefore( momentStart ) ) {\r\n            return Swal.fire('Error', 'La fecha de inicio tiene que ser antes de la fecha de fin', 'error')\r\n        }\r\n\r\n        if( title.length < 2 ){\r\n            return setValidTitle( false )\r\n        }\r\n        setValidTitle( true )\r\n\r\n        if( activeEvent ) {\r\n            dispatch( startEventUpdated( formValue ) )\r\n        } else {\r\n\r\n            dispatch( eventStartAddNew( formValue ) )\r\n\r\n        }    \r\n\r\n        closeModal()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n          isOpen={ isOpen }\r\n          onRequestClose={ closeModal }\r\n          style={ customStyles }\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n          closeTimeoutMS={ 200 }\r\n        > \r\n        <h1> { ( activeEvent ) ? 'Editar evento' : 'Nuevo evento' } </h1>\r\n        <hr />\r\n        <form \r\n            className=\"container\"\r\n            onSubmit={ handleSubmit }\r\n        >\r\n\r\n            <div className=\"form-group\">\r\n                <label>Fecha y hora inicio</label>\r\n            \r\n                <DateTimePicker\r\n                    onChange={ handleStartDateChange }\r\n                    value={ start }\r\n                    className=\"form-control\"\r\n                />\r\n\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Fecha y hora fin</label>\r\n                <DateTimePicker\r\n                    onChange={ handleEndDateChange }\r\n                    value={ end }\r\n                    minDate={ start }\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n\r\n            <hr />\r\n            <div className=\"form-group\">\r\n                <label>Titulo y notas</label>\r\n                <input \r\n                    type=\"text\" \r\n                    className={`form-control ${ !validTitle && 'is-invalid' }`}\r\n                    placeholder=\"Título del evento\"\r\n                    name=\"title\"\r\n                    autoComplete=\"off\"\r\n                    value={ title }\r\n                    onChange={ handleInputChange }\r\n                />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <textarea \r\n                    type=\"text\" \r\n                    className=\"form-control\"\r\n                    placeholder=\"Notas\"\r\n                    rows=\"5\"\r\n                    name=\"notes\"\r\n                    value={ notes }\r\n                    onChange={ handleInputChange }\r\n                ></textarea>\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n            </div>\r\n\r\n            <button\r\n                type=\"submit\"\r\n                className=\"btn btn-outline-primary btn-block\"\r\n            >\r\n                <i className=\"far fa-save\"></i>\r\n                <span> Guardar</span>\r\n            </button>\r\n\r\n        </form>\r\n        \r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startEventLogout } from '../../actions/events';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { name } = useSelector( state => state.auth );\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() )\r\n        dispatch( startEventLogout() )\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n            \r\n        </nav>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = () => {\r\n        dispatch( uiOpenModal() )\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClick }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { startEventDeleted } from '../../actions/events';\r\n\r\nexport const DeletedFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startEventDeleted() )\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\n\r\nimport { CalendarEvent } from './CalendarEvent'\r\nimport { CalenderModal } from './CalenderModal'\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { messages } from '../../helpers/calendar-messages-es'\r\n\r\nimport 'moment/locale/es'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport { eventClearActive, eventSetActive, eventStartLoaded } from '../../actions/events'\r\nimport { AddNewFab } from '../ui/AddNewFab'\r\nimport { DeletedFab } from '../ui/DeletedFab'\r\n\r\n\r\nmoment.locale('es')\r\nconst localizer = momentLocalizer(moment)\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector( state => state.calendar );\r\n    const { uid } = useSelector( state => state.auth );\r\n\r\n    const [lastView, setLastView] = useState( localStorage.getItem( 'lastView' ) || 'month' )\r\n\r\n    useEffect(() => {\r\n        dispatch( eventStartLoaded() )\r\n    }, [ dispatch ])\r\n\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n        \r\n        const style = {\r\n            backgroundColor: ( event.user._id === uid ) ? '#367cf7': '#465660',\r\n            borderRadius: '0px',\r\n            opacity: '0.8',\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n\r\n    }\r\n\r\n    const onDoubleClickEvent = (e) => {\r\n        dispatch( uiOpenModal() )\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch( eventSetActive( e ) )\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView( e )\r\n        localStorage.setItem('lastView', e)\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch( eventClearActive() )\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={ localizer }\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages }\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClickEvent }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                view={ lastView }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n            \r\n            <AddNewFab />\r\n\r\n            {\r\n                activeEvent \r\n                &&\r\n                <DeletedFab />\r\n            }\r\n\r\n\r\n            <CalenderModal />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n    return (\r\n        <Route { ...rest } \r\n            component={ props  =>(\r\n                ( isAuthenticated )\r\n                    ? <Component { ...props } />\r\n                    : <Redirect to='/login' />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest } \r\n            component={ props  =>(\r\n                ( !isAuthenticated )\r\n                    ? <Component { ...props } />\r\n                    : <Redirect to='/' />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen'\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const RouterApp = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const { checking, uid } = useSelector( state => state.auth );\r\n\r\n  useEffect(() => {\r\n    dispatch( startChecking() )\r\n  }, [dispatch])\r\n\r\n\r\n  if( checking ) {\r\n    return (<h1>Espere...</h1>)\r\n  }\r\n  \r\n    return (\r\n        <Router>\r\n          <div>\r\n            <Switch>\r\n                <PublicRoute path=\"/login\" component={ LoginScreen } isAuthenticated={ !!uid } />\r\n                <PrivateRoute path=\"/\" component={ CalendarScreen } isAuthenticated={ !!uid } />\r\n                <Redirect to='/login' />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport { store } from './store/store'\r\nimport { RouterApp } from './router/RouterApp'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <RouterApp />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css'\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n)"],"sourceRoot":""}